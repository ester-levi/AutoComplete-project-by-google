{"new": [{"sentence": "     Function designators like \"PyType_GenericNew()\", with implicit\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\c-api\\typeobj.txt", "offset": 1524, "score": 6}, {"sentence": "   Returns a new instance of the \"TimedRotatingFileHandler\" class. The\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\logging.handlers.txt", "offset": 320, "score": 6}, {"sentence": "functions you can actually assign a new dictionary to \"__dict__\",\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\2.1.txt", "offset": 450, "score": 6}, {"sentence": "though the new value is restricted to a regular Python dictionary; you\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\2.1.txt", "offset": 451, "score": 6}, {"sentence": "   Returns a new list containing elements from the population while\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\random.txt", "offset": 202, "score": 6}], "abb": [{"sentence": "   foo\" on the command-line as an abbreviation for \"--foobar\", then\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\optparse.txt", "offset": 1584, "score": 6}, {"sentence": "whether elements with no content are written in abbreviated (\"<tag\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\3.4.txt", "offset": 1671, "score": 6}, {"sentence": "   \"step\", \"next\", \"return\", \"jump\", \"quit\" and their abbreviations)\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\pdb.txt", "offset": 326, "score": 6}, {"sentence": "      Three or more alphanumerics giving the timezone abbreviations.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\time.txt", "offset": 584, "score": 6}, {"sentence": "The \"ArgumentParser\" class now allows disabling abbreviated usage of\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\3.5.txt", "offset": 678, "score": 6}], "boo": [{"sentence": "      [<class 'bool'>]\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\stdtypes.txt", "offset": 4404, "score": 6}, {"sentence": "   of code. Return a tuple of the breakpoint and a boolean that\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\bdb.txt", "offset": 378, "score": 6}, {"sentence": "can refer to almost any textbook on writing compilers.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\howto\\regex.txt", "offset": 55, "score": 6}, {"sentence": "   to \"PY_SSIZE_T_MAX\", silently boost the start and stop values less\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\c-api\\slice.txt", "offset": 83, "score": 6}, {"sentence": "   than \"PY_SSIZE_T_MIN\" to \"PY_SSIZE_T_MIN\", and silently boost the\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\c-api\\slice.txt", "offset": 84, "score": 6}], "mo": [{"sentence": "  modules. (Contributed by Oren Milman)\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\changelog.txt", "offset": 13385, "score": 4}, {"sentence": "   * if *tb* is not \"None\", it prints a header \"Traceback (most recent\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\traceback.txt", "offset": 37, "score": 4}, {"sentence": "* bpo-32394: socket: Remove TCP_FASTOPEN, TCP_KEEPCNT flags on older\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\changelog.txt", "offset": 13390, "score": 4}, {"sentence": "* bpo-32647: The ctypes module used to depend on indirect linking for\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\changelog.txt", "offset": 13398, "score": 4}, {"sentence": "   Imports the module \"co_names[namei]\".  TOS and TOS1 are popped and\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\dis.txt", "offset": 885, "score": 4}], "b ": [{"sentence": "* bpo-31574: Importlib was instrumented with two dtrace probes to\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\changelog.txt", "offset": 10441, "score": 4}, {"sentence": "     --build-lib (-b)     directory for compiled extension modules\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\distutils\\configfile.txt", "offset": 59, "score": 4}, {"sentence": "     --inplace (-i)       ignore build-lib and put compiled extensions into the\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\distutils\\configfile.txt", "offset": 61, "score": 4}, {"sentence": "      from contextlib import ContextDecorator\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\contextlib.txt", "offset": 332, "score": 4}, {"sentence": "   >>> from ftplib import FTP\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\3.2.txt", "offset": 1330, "score": 4}], "program": [{"sentence": "* when parsing a complete Python program (from a file or from a\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\reference\\toplevel_components.txt", "offset": 47, "score": 14}, {"sentence": "in a program consisting of many modules where each one imports the\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\faq\\programming.txt", "offset": 1903, "score": 14}, {"sentence": "   | disabled     | Widget is disabled under program control                      |\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\tkinter.ttk.txt", "offset": 211, "score": 14}, {"sentence": "   identical to the names used in C programs, as found in\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\signal.txt", "offset": 194, "score": 14}, {"sentence": "   programmers is known as the type \"object\").\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\c-api\\typeobj.txt", "offset": 1540, "score": 14}], "rogramming": [{"sentence": "they are programming.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\faq\\general.txt", "offset": 449, "score": 20}, {"sentence": "a very good Python mode for Emacs.  All of these programming\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\faq\\general.txt", "offset": 454, "score": 20}, {"sentence": "Python is a mature programming language which has established a\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\bugs.txt", "offset": 4, "score": 20}, {"sentence": "    *Knuth, Donald. The Art of Computer Programming Volume II, Section\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\collections.txt", "offset": 406, "score": 20}, {"sentence": "* bpo-26312: SystemError is now raised in all programming bugs with\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\changelog.txt", "offset": 18747, "score": 20}], "gh": [{"sentence": "though the new value is restricted to a regular Python dictionary; you\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\2.1.txt", "offset": 451, "score": 4}, {"sentence": "  string. (Contributed by Floris Bruynooghe; bpo-2125.)\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\2.6.txt", "offset": 2888, "score": 4}, {"sentence": "   # exception is still raised and must be caught\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\sqlite3.txt", "offset": 1483, "score": 4}, {"sentence": "though they do store the file's name  in its original case (they're\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\2.1.txt", "offset": 467, "score": 4}, {"sentence": "   This field is not inherited by subtypes (though the attributes\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\c-api\\typeobj.txt", "offset": 1555, "score": 4}], "we": [{"sentence": "     conversion to a pointer, are valid C99 address constants.However,\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\c-api\\typeobj.txt", "offset": 1525, "score": 4}, {"sentence": "request that isn't well-formed XML.  If you have to pass arbitrary\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\xmlrpc.client.txt", "offset": 117, "score": 4}, {"sentence": "how to do so.  New volunteers are always welcome!\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\about.txt", "offset": 11, "score": 4}, {"sentence": "   exception) will be printed as well, like the interpreter itself\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\traceback.txt", "offset": 49, "score": 4}, {"sentence": "* bpo-32734: Fixed \"asyncio.Lock()\" safety issue which allowed\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\changelog.txt", "offset": 13402, "score": 4}], "ee": [{"sentence": "   See the docs for \"chmod()\" for possible values of *mode*.  As of\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\os.txt", "offset": 692, "score": 4}, {"sentence": "volunteer effort, just like Python itself.  If you want to contribute,\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\about.txt", "offset": 9, "score": 4}, {"sentence": "See also:\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\2.1.txt", "offset": 455, "score": 4}, {"sentence": "how to do so.  New volunteers are always welcome!\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\about.txt", "offset": 11, "score": 4}, {"sentence": "  been introduced in 3.4.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\changelog.txt", "offset": 13396, "score": 4}], "t ": [{"sentence": "About these documents\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\about.txt", "offset": 1, "score": 4}, {"sentence": "   object *tb* to *file*. This differs from \"print_tb()\" in the\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\traceback.txt", "offset": 34, "score": 4}, {"sentence": "These documents are generated from reStructuredText sources by Sphinx,\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\about.txt", "offset": 4, "score": 4}, {"sentence": "a document processor specifically written for the Python\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\about.txt", "offset": 5, "score": 4}, {"sentence": "   * if *tb* is not \"None\", it prints a header \"Traceback (most recent\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\traceback.txt", "offset": 37, "score": 4}], "zo": [{"sentence": "  most recently finished frame (a \"zombie frame\") in an internal field\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\2.5.txt", "offset": 1172, "score": 4}, {"sentence": "      >>> datetime(2019, 5, 18, 15, 17, tzinfo=timezone.utc).isoformat()\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\datetime.txt", "offset": 1364, "score": 4}, {"sentence": "      ...     \"\"\"A time zone with an arbitrary, constant -06:39 offset.\"\"\"\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\datetime.txt", "offset": 1373, "score": 4}, {"sentence": "     as an aware \"datetime\" using the local \"timezone\".  Given an\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\3.3.txt", "offset": 1351, "score": 4}, {"sentence": "     local \"timezone\".\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\3.3.txt", "offset": 1353, "score": 4}], "om": [{"sentence": "   object *tb* to *file*. This differs from \"print_tb()\" in the\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\traceback.txt", "offset": 34, "score": 4}, {"sentence": "These documents are generated from reStructuredText sources by Sphinx,\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\about.txt", "offset": 4, "score": 4}, {"sentence": "how to do so.  New volunteers are always welcome!\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\about.txt", "offset": 11, "score": 4}, {"sentence": "   provide the *fromlist* and *level* arguments of \"__import__()\".\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\dis.txt", "offset": 886, "score": 4}, {"sentence": "* Fredrik Lundh for his Alternative Python Reference project from\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\about.txt", "offset": 21, "score": 4}], "mnew": [], "pw": [{"sentence": "   user's home directory will be determined with the \"getpwuid()\"\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\install\\index.txt", "offset": 771, "score": 4}, {"sentence": "   function from the standard \"pwd\" module. This is done by the\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\install\\index.txt", "offset": 772, "score": 4}, {"sentence": "os.pwrite(fd, str, offset)\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\os.txt", "offset": 1077, "score": 4}, {"sentence": "   falls back to \"pwd.getpwuid(os.getuid())[0]\" to get the login name\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\os.txt", "offset": 296, "score": 4}, {"sentence": "os.pwritev(fd, buffers, offset, flags=0)\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\os.txt", "offset": 1088, "score": 4}], "wui": [{"sentence": "   user's home directory will be determined with the \"getpwuid()\"\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\install\\index.txt", "offset": 771, "score": 6}, {"sentence": "   falls back to \"pwd.getpwuid(os.getuid())[0]\" to get the login name\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\os.txt", "offset": 296, "score": 6}, {"sentence": "pwd.getpwuid(uid)\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\library\\pwd.txt", "offset": 48, "score": 6}, {"sentence": "  \"KeyError\" on calling \"pwd.getpwuid()\": don't create the \"HOME\"\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\changelog.txt", "offset": 5749, "score": 6}, {"sentence": "  \"pwd.getpwnam\" and \"pwd.getpwuid\" if reentrant variants of these\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\python-3.8.4-docs-text\\whatsnew\\changelog.txt", "offset": 6554, "score": 6}], "mp": [{"sentence": "   \"cmp_op[opname]\".\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\dis.txt", "offset": 881, "score": 4}, {"sentence": "   Imports the module \"co_names[namei]\".  TOS and TOS1 are popped and\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\dis.txt", "offset": 885, "score": 4}, {"sentence": "   provide the *fromlist* and *level* arguments of \"__import__()\".\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\dis.txt", "offset": 886, "score": 4}, {"sentence": "   is not affected: for a proper import statement, a subsequent\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\dis.txt", "offset": 888, "score": 4}, {"sentence": "  is an empty quoted string. Patch by Xiang Zhang.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\changelog.txt", "offset": 13410, "score": 4}], "rete": [{"sentence": "   exception) will be printed as well, like the interpreter itself\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\traceback.txt", "offset": 49, "score": 8}, {"sentence": "interpreter.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\2.1.txt", "offset": 476, "score": 8}, {"sentence": "When using the Python interpreter interactively, the output of\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\2.1.txt", "offset": 482, "score": 8}, {"sentence": "  interpreter shutdown.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\changelog.txt", "offset": 13438, "score": 8}, {"sentence": "the interpreter to act as if the method did not exist (perhaps raising\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\2.1.txt", "offset": 526, "score": 8}], "eteerer": [{"sentence": "   Release the global interpreter lock (if it has been created) and\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\c-api\\init.txt", "offset": 794, "score": 14}, {"sentence": "   Acquire the global interpreter lock (if it has been created) and\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\c-api\\init.txt", "offset": 801, "score": 14}, {"sentence": "If the interpreter would have been started with \"-O\", the sample would\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\ctypes.txt", "offset": 1043, "score": 14}, {"sentence": "API\") need to define \"Py_LIMITED_API\". A number of interpreter details\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\c-api\\stable.txt", "offset": 21, "score": 14}, {"sentence": "   once all pairs have been reported.  The parameters *pkey* and\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\c-api\\dict.txt", "offset": 148, "score": 14}], "twe": [{"sentence": "with ASCII values between 0 and 31 (except, of course, tab, newline\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\xmlrpc.client.txt", "offset": 115, "score": 6}, {"sentence": "For logging to work interoperably between any third-party libraries\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\howto\\logging-cookbook.txt", "offset": 1962, "score": 6}, {"sentence": "   between the code above and the prompt below down to a 'Squeezed\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\idle.txt", "offset": 382, "score": 6}, {"sentence": "   the value between \"0x03050400\" and \"0x03060000\" (not including) or\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\c-api\\slice.txt", "offset": 69, "score": 6}, {"sentence": "   separator, placed between the date and time portions of the result.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\datetime.txt", "offset": 1368, "score": 6}], "wee": [{"sentence": "with ASCII values between 0 and 31 (except, of course, tab, newline\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\xmlrpc.client.txt", "offset": 115, "score": 6}, {"sentence": "For logging to work interoperably between any third-party libraries\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\howto\\logging-cookbook.txt", "offset": 1962, "score": 6}, {"sentence": "   between the code above and the prompt below down to a 'Squeezed\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\idle.txt", "offset": 382, "score": 6}, {"sentence": "   the value between \"0x03050400\" and \"0x03060000\" (not including) or\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\c-api\\slice.txt", "offset": 69, "score": 6}, {"sentence": "   separator, placed between the date and time portions of the result.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\datetime.txt", "offset": 1368, "score": 6}], "een": [{"sentence": "with ASCII values between 0 and 31 (except, of course, tab, newline\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\xmlrpc.client.txt", "offset": 115, "score": 6}, {"sentence": "   methods can only be used after a connection has been made. The\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\ftplib.txt", "offset": 168, "score": 6}, {"sentence": "  been introduced in 3.4.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\changelog.txt", "offset": 13396, "score": 6}, {"sentence": "* The \"macfs\" module has been removed.  This in turn required the\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\2.6.txt", "offset": 2898, "score": 6}, {"sentence": "* Many other Mac OS modules have been deprecated and will be removed\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\2.6.txt", "offset": 2902, "score": 6}], " \u05e4": [], " u": [{"sentence": "* bpo-32647: The ctypes module used to depend on indirect linking for\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\changelog.txt", "offset": 13398, "score": 4}, {"sentence": "   does when printing an unhandled exception.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\library\\traceback.txt", "offset": 50, "score": 4}, {"sentence": "* bpo-27931: Fix email address header parsing error when the username\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\changelog.txt", "offset": 13409, "score": 4}, {"sentence": "* bpo-32304: distutils' upload command no longer corrupts tar files\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\changelog.txt", "offset": 13412, "score": 4}, {"sentence": "  any of the upload text fields.\n", "path": "C:/Users/RENT/Desktop/\u05d1\u05d5\u05d8\u05e7\u05de\u05e4/GOOGLE\\whatsnew\\changelog.txt", "offset": 13414, "score": 4}]}